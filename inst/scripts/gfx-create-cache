#!/usr/bin/env Rscript

##
## Creates a new GenomicCache from the specified source
##

options(error=function(e) {
  quit(save='no', status=1)
})

suppressPackageStartupMessages({
  if (!require(optparse)) {
    err('optparse library needed, please install via:\n',
        'install.packages("optparse", repos="http://R-Forge.R-project.org")')
  }
})

err <- function(..., sep=" ") {
  msg <- paste(unlist(list(...)), sep=sep)
  cat("ERROR:", msg, "\n")
  quit(save='no', status=1)
}

usage <- paste("gfx-create-cache [options] GENOME ANNOTATION\n",
  "Creates a new GenomicCache directory and creates specified annotation DB.\n",
  "Appropriate values for GENOME: hg18, hg19, mm9, etc.",
  "Appropriate values for ANNOTATION: refseq, ucsc, aceview",
  sep="\n    ")

option.list <-
  list(
       make_option(c('-p', '--parent.dir'), default=".", type="character",
                   help="Directory to create and store GFXCache dir"),
       make_option(c('-n', '--name', default=NULL), type='character',
                   help="The name of the GenomicCache directory")
       )

parser <- OptionParser(usage=usage, option_list=option.list)
parsed <- parse_args(parser, positional_argument=TRUE)
opts <- parsed$options
args <- parsed$args

################################################################################
## Process positional arguments
if (length(args) != 2) {
  err("Illegal number of arguments")
}

genome <- args[1]
annotation <- args[2]

parent.info <- file.info(opts$parent.dir)
if (is.na(parent.info$isdir) || !parent.info$isdir) {
  err("Parent directory for GenomicCache object doesn't exist")
}

cat("... loading required packages ...\n")
suppressPackageStartupMessages({
  library(GenomicFeaturesX)
})

start.time <- proc.time()['elapsed']
createGenomicCache(genome, annotation, path=opts$parent.dir,
                   gc.name=opts$name)
time.taken <- proc.time()['elapsed'] - start.time

cat("====== Total time taken:", time.taken, "seconds ======\n\n")
